<div style="
margin: 0;
min-height: 100vh;
background: transparent;
display: flex;
justify-content: center;
align-items: center;
font-family: 'Segoe UI', sans-serif;
padding: 1rem;
">
  <style>
    .delete-task-btn:hover {
      color: #dc3545 !important;
    }

    #delete-bin {
      position: fixed;
      bottom: 20px;
      left: 20px;
      border-radius: 50%;
      width: 50px;
      height: 50px;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 4px 15px rgba(0,0,0,0.1);
      transition: all 0.3s ease;
      background-color: #f8d7da; /* Light red background */
      color: #721c24; /* Dark red text */
      opacity: 0;
      pointer-events: none;
    }

    #delete-bin.active {
      opacity: 1;
      pointer-events: auto;
      transform: scale(1.2);
    }
    
    /* Priority badges */
    .priority-high {
      background-color: #ef5350 !important;
      color: white !important;
    }
    
    .priority-medium {
      background-color: #ffb74d !important;
      color: #664d03 !important;
    }
    
    .priority-low {
      background-color: #66bb6a !important;
      color: white !important;
    }
    
    /* Task card styles */
    .task-card {
      background: white;
      border-radius: 8px !important;
      margin-bottom: 0.75rem !important;
      border-left: 5px solid #ddd !important;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05) !important;
      transition: transform 0.2s ease, box-shadow 0.2s ease !important;
      min-height: 60px !important;
      display: flex !important;
      flex-direction: column !important;
      align-items: flex-start !important;
      padding: 0.75rem 1rem !important;
      cursor: pointer !important;
    }
    
    .task-card:hover {
      transform: translateY(-2px) !important;
      box-shadow: 0 4px 8px rgba(0,0,0,0.15) !important;
    }
  </style>

  <div style="
    width: 100%;
    max-width: 1200px;
    height: calc(100vh - 2rem);
    background: rgba(255, 255, 255, 0.9);
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    overflow-x: auto;
    overflow-y: hidden;
    display: flex;
    padding: 1.5rem;
    gap: 1.5rem;
    scrollbar-width: none;
  " id="status-container">

    <!-- Incomplete Tasks Column -->
    <div class="status-section position-relative" data-status="incomplete" style="
      min-width: 300px;
      flex: 1;
      background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
      border-radius: 15px;
      box-shadow: 0 4px 15px rgba(0,0,0,0.05);
      padding: 1.5rem;
      display: flex;
      flex-direction: column;
      gap: 1rem;
      transition: all 0.3s ease;
      max-height: 100%;
    ">
      <h3 class="mb-3 text-center" style="color: #374151;">
        <i class="fas fa-list me-2"></i>To Do
      </h3>

      <div style="height: 1px; background-color: rgba(0,0,0,0.1); margin: 0.5rem 0;"></div>

      <div style="
        flex: 1;
        overflow-y: auto;
        scrollbar-width: none;
        -ms-overflow-style: none;
        margin-bottom: 60px;
      ">
        <ul class="list-group" id="incomplete-tasks">
          <% @incomplete.each do |task| %>
            <% 
              priority_class = case task.priority 
                when 1 then "priority-high"
                when 2 then "priority-medium"
                when 3 then "priority-low"
              end
              
              border_color = case task.priority
                when 1 then "#ef5350"
                when 2 then "#ffb74d"
                when 3 then "#66bb6a"
                else "#ddd"
              end
              
              priority_text = case task.priority
                when 1 then "High"
                when 2 then "Medium"
                when 3 then "Low"
              end
            %>
            <li class="list-group-item position-relative task-card" draggable="true" data-task-id="<%= task.id %>"
                data-bs-toggle="modal" data-bs-target="#taskDetailsModal<%= task.id %>"
                style="border-left-color: <%= border_color %> !important">
              <span class="task-title" style="
                color: #333;
                font-size: 1rem; /* Slightly larger title */
                font-weight: 500; /* Semi-bold */
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
                width: 100%; /* Take full width */
              ">
                <%= task.title %>
              </span>

              <div style="display: flex; justify-content: space-between; width: 100%; margin-top: 0.5rem; align-items: center;">
                <% if task.due_date.present? %>
                  <small class="text-muted" style="
                    font-size: 0.75rem;
                  ">
                    Due: <%= time_ago_in_words(task.due_date) %> ago
                  </small>
                <% else %>
                  <small></small>
                <% end %>

                <% if priority_text.present? %>
                  <span class="badge <%= priority_class %>" style="
                    font-size: 0.65rem;
                    padding: 0.25rem 0.5rem;
                  ">
                    <%= priority_text %>
                  </span>
                <% end %>
              </div>
              
              <% if task.label&.name.present? %>
                <div style="margin-top: 0.5rem;">
                  <span style="
                    font-size: 0.65rem;
                    padding: 0.15rem 0.4rem;
                    background-color: #e2e8f0;
                    color: #4a5568;
                    border-radius: 4px;
                  ">
                    <%= task.label&.name %>
                  </span>
                </div>
              <% end %>
            </li>

            <!-- Task Details Modal -->
            <div class="modal fade" id="taskDetailsModal<%= task.id %>" tabindex="-1" aria-labelledby="taskDetailsModalLabel<%= task.id %>" aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="taskDetailsModalLabel<%= task.id %>"><%= task.title %></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                  </div>
                  <div class="modal-body">
                    <p><strong>Description:</strong> <%= task.description %></p>
                    <p><strong>Due Date:</strong> <%= task.due_date&.strftime("%B %d, %Y") || "No due date" %></p>
                    <p><strong>Priority:</strong> <span class="badge <%= priority_class %>"><%= priority_text %></span></p>
                    <p><strong>Label:</strong> <%= task.label&.name || "No label" %></p>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                  </div>
                </div>
              </div>
            </div>
          <% end %>
        </ul>
      </div>
    </div>

    <!-- Ongoing Tasks Column -->
    <div class="status-section position-relative" data-status="ongoing" style="
      min-width: 300px;
      flex: 1;
      background: linear-gradient(135deg, #ffffff 0%, #fff8f0 100%);
      border-radius: 15px;
      box-shadow: 0 4px 15px rgba(0,0,0,0.05);
      padding: 1.5rem;
      display: flex;
      flex-direction: column;
      gap: 1rem;
      transition: all 0.3s ease;
      max-height: 100%;
    ">
      <h3 class="mb-3 text-center" style="color: #374151;">
        <i class="fas fa-spinner me-2"></i>In Progress
      </h3>

      <div style="height: 1px; background-color: rgba(0,0,0,0.1); margin: 0.5rem 0;"></div>

      <div style="
        flex: 1;
        overflow-y: auto;
        scrollbar-width: none;
        -ms-overflow-style: none;
      ">
        <ul class="list-group" id="ongoing-tasks">
          <% @ongoing.each do |task| %>
            <% 
              priority_class = case task.priority 
                when 1 then "priority-high"
                when 2 then "priority-medium"
                when 3 then "priority-low"
              end
              
              border_color = case task.priority
                when 1 then "#ef5350"
                when 2 then "#ffb74d"
                when 3 then "#66bb6a"
                else "#ddd"
              end
              
              priority_text = case task.priority
                when 1 then "High"
                when 2 then "Medium"
                when 3 then "Low"
              end
            %>
            <li class="list-group-item position-relative task-card" draggable="true" data-task-id="<%= task.id %>"
                data-bs-toggle="modal" data-bs-target="#taskDetailsModal<%= task.id %>"
                style="border-left-color: <%= border_color %> !important">
              <span class="task-title" style="
                color: #333;
                font-size: 1rem; /* Slightly larger title */
                font-weight: 500; /* Semi-bold */
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
                width: 100%; /* Take full width */
              ">
                <%= task.title %>
              </span>

              <div style="display: flex; justify-content: space-between; width: 100%; margin-top: 0.5rem; align-items: center;">
                <% if task.due_date.present? %>
                  <small class="text-muted" style="
                    font-size: 0.75rem;
                  ">
                    Due: <%= time_ago_in_words(task.due_date) %> ago
                  </small>
                <% else %>
                  <small></small>
                <% end %>

                <% if priority_text.present? %>
                  <span class="badge <%= priority_class %>" style="
                    font-size: 0.65rem;
                    padding: 0.25rem 0.5rem;
                  ">
                    <%= priority_text %>
                  </span>
                <% end %>
              </div>
              
              <% if task.label&.name.present? %>
                <div style="margin-top: 0.5rem;">
                  <span style="
                    font-size: 0.65rem;
                    padding: 0.15rem 0.4rem;
                    background-color: #e2e8f0;
                    color: #4a5568;
                    border-radius: 4px;
                  ">
                    <%= task.label&.name %>
                  </span>
                </div>
              <% end %>
            </li>

            <!-- Task Details Modal -->
            <div class="modal fade" id="taskDetailsModal<%= task.id %>" tabindex="-1" aria-labelledby="taskDetailsModalLabel<%= task.id %>" aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="taskDetailsModalLabel<%= task.id %>"><%= task.title %></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                  </div>
                  <div class="modal-body">
                    <p><strong>Description:</strong> <%= task.description %></p>
                    <p><strong>Due Date:</strong> <%= task.due_date&.strftime("%B %d, %Y") || "No due date" %></p>
                    <p><strong>Priority:</strong> <span class="badge <%= priority_class %>"><%= priority_text %></span></p>
                    <p><strong>Label:</strong> <%= task.label&.name || "No label" %></p>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                  </div>
                </div>
              </div>
            </div>
          <% end %>
        </ul>
      </div>
    </div>

    <!-- Completed Tasks Column -->
    <div class="status-section position-relative" data-status="complete" style="
      min-width: 300px;
      flex: 1;
      background: linear-gradient(135deg, #ffffff 0%, #f0fff4 100%);
      border-radius: 15px;
      box-shadow: 0 4px 15px rgba(0,0,0,0.05);
      padding: 1.5rem;
      display: flex;
      flex-direction: column;
      gap: 1rem;
      transition: all 0.3s ease;
      max-height: 100%;
    ">
      <h3 class="mb-3 text-center" style="color: #374151;">
        <i class="fas fa-check-circle me-2"></i>Completed
      </h3>

      <div style="height: 1px; background-color: rgba(0,0,0,0.1); margin: 0.5rem 0;"></div>

      <div style="
        flex: 1;
        overflow-y: auto;
        scrollbar-width: none;
        -ms-overflow-style: none;
      ">
        <ul class="list-group" id="complete-tasks">
          <% @complete.each do |task| %>
            <% 
              priority_class = case task.priority 
                when 1 then "priority-high"
                when 2 then "priority-medium"
                when 3 then "priority-low"
              end
              
              border_color = case task.priority
                when 1 then "#ef5350"
                when 2 then "#ffb74d"
                when 3 then "#66bb6a"
                else "#ddd"
              end
              
              priority_text = case task.priority
                when 1 then "High"
                when 2 then "Medium"
                when 3 then "Low"
              end
            %>
            <li class="list-group-item position-relative task-card" draggable="true" data-task-id="<%= task.id %>"
                data-bs-toggle="modal" data-bs-target="#taskDetailsModal<%= task.id %>"
                style="border-left-color: <%= border_color %> !important; text-decoration: line-through;">
              <span class="task-title" style="
                color: #6b7280;
                font-size: 1rem; /* Slightly larger title */
                font-weight: 500; /* Semi-bold */
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
                width: 100%; /* Take full width */
              ">
                <%= task.title %>
              </span>

              <div style="display: flex; justify-content: space-between; width: 100%; margin-top: 0.5rem; align-items: center;">
                <% if task.due_date.present? %>
                  <small class="text-muted" style="
                    font-size: 0.75rem;
                  ">
                    Due: <%= time_ago_in_words(task.due_date) %> ago
                  </small>
                <% else %>
                  <small></small>
                <% end %>

                <% if priority_text.present? %>
                  <span class="badge <%= priority_class %>" style="
                    font-size: 0.65rem;
                    padding: 0.25rem 0.5rem;
                    opacity: 0.7;
                  ">
                    <%= priority_text %>
                  </span>
                <% end %>
              </div>
              
              <% if task.label&.name.present? %>
                <div style="margin-top: 0.5rem;">
                  <span style="
                    font-size: 0.65rem;
                    padding: 0.15rem 0.4rem;
                    background-color: #e2e8f0;
                    color: #4a5568;
                    border-radius: 4px;
                    opacity: 0.7;
                  ">
                    <%= task.label&.name %>
                  </span>
                </div>
              <% end %>
            </li>

            <!-- Task Details Modal -->
            <div class="modal fade" id="taskDetailsModal<%= task.id %>" tabindex="-1" aria-labelledby="taskDetailsModalLabel<%= task.id %>" aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="taskDetailsModalLabel<%= task.id %>"><%= task.title %></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                  </div>
                  <div class="modal-body">
                    <p><strong>Description:</strong> <%= task.description %></p>
                    <p><strong>Due Date:</strong> <%= task.due_date&.strftime("%B %d, %Y") || "No due date" %></p>
                    <p><strong>Priority:</strong> <span class="badge <%= priority_class %>"><%= priority_text %></span></p>
                    <p><strong>Label:</strong> <%= task.label&.name || "No label" %></p>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                  </div>
                </div>
              </div>
            </div>
          <% end %>
        </ul>
      </div>
    </div>

    <div id="delete-bin">
      <i class="fas fa-trash" style="font-size: 1.2rem;"></i>
    </div>

    <!-- Add Task Button -->
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTaskModal" style="
      position: fixed;
      bottom: 20px;
      right: 20px;
      border-radius: 50%;
      width: 50px;
      height: 50px;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 4px 15px rgba(0,0,0,0.1);
      transition: all 0.3s ease;
    "
    onmouseover="this.style.transform='scale(1.1)'"
    onmouseout="this.style.transform='scale(1)'">
      <i class="fas fa-plus" style="font-size: 1.2rem;"></i>
    </button>

    <!-- Add Task Modal -->
    <div class="modal fade" id="addTaskModal" tabindex="-1" aria-labelledby="addTaskModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="addTaskModalLabel">Add New Task</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <%= form_with(model: Task.new, url: user_tasks_path(current_user), local: true, id: 'addTaskForm') do |form| %>
              <div class="mb-3">
                <%= form.label :title, class: "form-label" %>
                <%= form.text_field :title, class: "form-control", required: true %>
              </div>
              <div class="mb-3">
                <%= form.label :description, class: "form-label" %>
                <%= form.text_area :description, class: "form-control" %>
              </div>
              <div class="mb-3">
                <%= form.label :due_date, class: "form-label" %>
                <%= form.date_field :due_date, class: "form-control" %>
              </div>
              <div class="mb-3">
                <%= form.label :label, class: "form-label" %>
                <div class="input-group">
                  <%= form.select :label_id,
                      @labels.map { |label| [label.name, label.id] },
                      { include_blank: "Select existing label" },
                      { class: "form-select", id: "existing_label" }
                  %>
                  <span class="input-group-text">or</span>
                  <%= form.text_field :label_name,
                      class: "form-control",
                      placeholder: "Create new label",
                      id: "new_label"
                  %>
                </div>
              </div>
              <div class="mb-3">
                <%= form.label :priority, class: "form-label" %>
                <%= form.select :priority,
                    options_for_select([['High', 1], ['Medium', 2], ['Low', 3]]),
                    {},
                    class: "form-select"
                %>
              </div>
              <%= form.hidden_field :status, value: 0 %>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <%= form.submit "Create Task", class: "btn btn-primary" %>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<%= javascript_tag do %>
  document.addEventListener('DOMContentLoaded', function() {

    const taskLists = document.querySelectorAll('.list-group');
    const token = document.querySelector('meta[name="csrf-token"]')?.content;
    const deleteBin = document.getElementById('delete-bin');
    const userId = <%= current_user.id %>;

    // Function to apply completed style
    function applyCompletedStyle(item) {
      item.style.textDecoration = 'line-through';
      item.style.color = '#6b7280';
    }

    // Function to remove completed style
    function removeCompletedStyle(item) {
      item.style.textDecoration = 'none';
      item.style.color = '#333';
    }

    // Apply initial style to completed tasks on page load
    document.querySelectorAll('.status-section[data-status="complete"] .list-group-item').forEach(item => {
      applyCompletedStyle(item);
    });

    taskLists.forEach(list => {
      new Sortable(list, {
        group: 'tasks',
        animation: 150,
        ghostClass: 'task-ghost',
        onStart: function(evt) {
          deleteBin.classList.add('active');
        },
        onEnd: function(evt) {
          deleteBin.classList.remove('active');

          // Check if the task was dropped on the delete bin
           if(evt.to != deleteBin) {
            const taskId = evt.item.dataset.taskId;
            const newStatus = evt.to.closest('.status-section').dataset.status;

            const statusMap = {
              'incomplete': 0,
              'ongoing': 1,
              'complete': 2
            };

            fetch(`/tasks/${taskId}/update_status`, {
              method: 'PATCH',
              headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': token,
                'Accept': 'application/json'
              },
              body: JSON.stringify({ status: statusMap[newStatus] })
            })
            .then(response => {
              if (!response.ok) throw new Error('Network response was not ok');
              return response.json();
            })
            .then(data => {
              if (newStatus === 'complete') {
                applyCompletedStyle(evt.item);
              } else {
                removeCompletedStyle(evt.item);
              }
            })
            .catch(error => {
              console.error('Error:', error);
              evt.from.appendChild(evt.item); // revert on error
            });
          }else{
            
          }
        }
      });
    });
    
    // Make the delete bin a valid drop target
    new Sortable(deleteBin, {
      group: 'tasks',
      onAdd: function(evt) {
        const taskId = evt.item.dataset.taskId;
        
        fetch(`/tasks/${taskId}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': token,
            'Accept': 'application/json'
          }
        })
        .then(response => {
          console.log("Probably SENDING TWO QUERIES ??");
          if (!response.ok) throw new Error('Network response was not ok');
          evt.item.remove(); // Remove the task from the DOM
        })
        .catch(error => {
          console.error('Delete error:', error);
          console.log('YES GOT IT', taskId);
        });
        
      }
    });
  });

  document.addEventListener('DOMContentLoaded', function() {
    const existingLabel = document.getElementById('existing_label');
    const newLabel = document.getElementById('new_label');

    existingLabel.addEventListener('change', function() {
      if (this.value) {
        newLabel.value = '';
        newLabel.disabled = true;
      } else {
        newLabel.disabled = false;
      }
    });

    newLabel.addEventListener('input', function() {
      if (this.value) {
        existingLabel.value = '';
        existingLabel.disabled = true;
      } else {
        newLabel.disabled = false;
      }
    });
  });

  // Function to reset the add task form
  function resetAddTaskForm() {
    const form = document.getElementById('addTaskForm');
    form.reset(); // Reset the form

    // Clear label selections
    const existingLabel = document.getElementById('existing_label');
    const newLabel = document.getElementById('new_label');
    existingLabel.value = '';
    newLabel.value = '';
    existingLabel.disabled = false;
    newLabel.disabled = false;
  }

  // Add event listener to the add task modal to reset the form when it's shown
  const addTaskModal = document.getElementById('addTaskModal');
  addTaskModal.addEventListener('show.bs.modal', function (event) {
    resetAddTaskForm();
  });
<% end %>